# The receivers are the section that allows the OpenTelemetry Collector to receive data from various sources using Push or Pull model.
# The receiver name must match the name of the receiver in the service/pipelines/traces/receivers section.
receivers:
  otlp:
    protocols:
      grpc:
      http:

  rabbitmq:
    endpoint: http://rabbitmq:15672
    username: myuser
    password: password
    collection_interval: 10s
    tls:
      insecure: true

# The exporters are the section that allows the OpenTelemetry Collector to export data to various sources.
# The exporter name must match the name of the exporter in the service/pipelines/traces/exporters section.
exporters:
  # exports zipkin format spans to the zipkin instance
  zipkin:
    endpoint: "http://zipkin:9411/api/v2/spans"
    tls:
      insecure: true

  # exports logs to the seq instance
  otlphttp/seq:
    endpoint: "http://seq:5341/ingest/otlp"
    tls:
      insecure: true

  # Setting logging level to debug (possibilities to filter log level in a central place)
  debug:
    verbosity: detailed

  # Exporter for the metrics endpoint for the prometheus instance
  prometheus:
    endpoint: "0.0.0.0:8889"

  # Exporter for the jeager instance
  otlp:
    endpoint: jaeger:4317
    tls:
      insecure: true

connectors:
  spanmetrics:

processors:
  batch:

# The service section is the top-level section that contains the configuration for the OpenTelemetry Collector service.
# The pipelines section contains the configuration for the data pipelines that the OpenTelemetry Collector will run.
# The name of the pipeline must match the name of the pipeline in the service/pipelines section.
service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, zipkin, spanmetrics, otlp, otlphttp/seq]
    metrics:
      receivers: [otlp, rabbitmq]
      processors: [batch]
      exporters: [debug, prometheus]
    logs:
      receivers: [otlp]
      processors: []
      exporters: [debug, otlphttp/seq]
    metrics/spanmetrics:
      receivers: [spanmetrics]
      exporters: [prometheus]
